---

services:
  spark:
    build:
      context: .
      dockerfile: Dockerfile
    image: spark-emr-6.7.0:latest
    container_name: spark
    command: >
      sh -c "/home/hadoop/workspace/workaround/init_container.sh"
    ports:
      - "4040:4040"
      - "4022:22"
    working_dir: /home/hadoop/workspace
    environment:
      - AWS_REGION=us-east-1
      - AWS_PROFILE=datadev
    networks:
      - emr-local-dev
    volumes:
      - ${HOME}/.ssh/pkapoor.pub:/home/hadoop/id_rsa.pub:ro
      - ${HOME}/.aws:/home/hadoop/.aws:rw
      - ${PWD}/workaround/vscode-sysroot/toolchain/vscode-sysroot-x86_64-linux-gnu.tgz:/home/hadoop/vscode-sysroot-x86_64-linux-gnu.tgz:ro
      - ${PWD}:/home/hadoop/workspace/:rw
      - ${HOME}/repos:/home/hadoop/workspace/repos:ro

  glue:
    image: public.ecr.aws/glue/aws-glue-libs:5
    container_name: glue
    command: >
      sh -c "/home/hadoop/workspace/init_ssh.sh"
    ports:
      - "4041:4040"
      - "4023:22"
    working_dir: /home/hadoop/workspace
    environment:
      - AWS_REGION=us-east-1
      - AWS_PROFILE=datadev
    networks:
      - emr-local-dev
    volumes:
      - ${HOME}/.ssh/pkapoor.pub:/home/hadoop/id_rsa.pub:ro
      - ${HOME}/.aws:/home/hadoop/.aws:rw
      - ${PWD}:/home/hadoop/workspace/:rw
      - ${HOME}/repos:/home/hadoop/workspace/repos:ro

  zookeeper:
    image: bitnami/zookeeper:3.5
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - emr-local-dev
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - zookeeper_data:/bitnami/zookeeper

  kafka:
    image: bitnami/kafka:2.8.1
    container_name: kafka
    expose:
      - 9092
    ports:
      - "29092:29092"
    networks:
      - emr-local-dev
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_BROKER_ID=0
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=INTERNAL://:9092,EXTERNAL://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka:9092,EXTERNAL://localhost:29092
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_CFG_NUM_PARTITIONS=3
      - KAFKA_CFG_DEFAULT_REPLICATION_FACTOR=1
    volumes:
      - kafka_data:/bitnami/kafka
    depends_on:
      - zookeeper

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.1
    container_name: kafka-ui
    ports:
      - "8080:8080"
    networks:
      - emr-local-dev
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    depends_on:
      - zookeeper
      - kafka

  kafka-connect:
    image: bitnami/kafka:2.8.1
    container_name: kafka-connect
    command: >
      /opt/bitnami/kafka/bin/connect-distributed.sh
      /opt/bitnami/kafka/config/connect-distributed.properties
    ports:
      - "8083:8083"
    networks:
      - emr-local-dev
    environment:
      AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
      AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
      AWS_SESSION_TOKEN: $AWS_SESSION_TOKEN
    volumes:
      - "./connect/src/:/opt/connectors/"
      - "./connect/config/connect-distributed.properties:/opt/bitnami/kafka/config/connect-distributed.properties"
    depends_on:
      - zookeeper
      - kafka
      - kafka-ui

  postgres:
    image: postgres:13
    container_name: postgres
    command: ["postgres", "-c", "wal_level=logical"]
    ports:
      - 5432:5432
    networks:
      - emr-local-dev
    volumes:
      - ./connect/sql:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_DB=main
      - POSTGRES_USER=master
      - POSTGRES_PASSWORD=password

  registry:
    image: apicurio/apicurio-registry-sql:2.2.0.Final
    container_name: registry
    command: bash -c 'while !</dev/tcp/postgres/5432; do sleep 1; done; /usr/local/s2i/run'
    ports:
      - "9090:8080"
    networks:
      - emr-local-dev
    environment:
      REGISTRY_DATASOURCE_URL: "jdbc:postgresql://postgres/main?currentSchema=registry"
      REGISTRY_DATASOURCE_USERNAME: master
      REGISTRY_DATASOURCE_PASSWORD: password
    depends_on:
      - zookeeper
      - kafka
      - postgres

networks:
  emr-local-dev:
    name: emr-local-dev

volumes:
  kafka_data:
  zookeeper_data:
